--SINISTRO POR PLANO 

SELECT
CAST(FORMAT_DATE("%Y%m", A.DAT_PAGAMENTO) AS INT64) AS ANO_MES_PAGAMENTO,
A.COD_PLAN_ADM
, CE.NME_CATEGORIA
, CA.IDC_TIPO_PLANO 
, D.COD_PROD
, C.COD_TIPO_PRODUTO
, D.FLG_COPART_REVERS
, (case WHEN C.COD_TIPO_PRODUTO = 'A' THEN 'ADMINISTRADO'
				WHEN C.COD_TIPO_PRODUTO = 'P' THEN 'PME'
				WHEN C.COD_TIPO_PRODUTO = 'G' AND (D.FLG_CONTR_ADESAO = 'N' OR D.FLG_CONTR_ADESAO IS NULL) and D.COD_PROD not IN (567,563) THEN 'EMPRESARIAL'
				WHEN C.COD_TIPO_PRODUTO = 'G' AND D.FLG_CONTR_ADESAO = 'S' THEN 'ADESAO'
        WHEN C.COD_TIPO_PRODUTO = 'G' AND D.COD_PROD IN (567,563) AND (D.FLG_CONTR_ADESAO = 'N' OR D.FLG_CONTR_ADESAO IS NULL) THEN 'PME+'              
				WHEN C.COD_TIPO_PRODUTO = 'I' THEN 'INDIVIDUAL'
				ELSE 'NÃƒO IDENTIFICADO' END) AS CARTEIRA   
,case when PM.COPART is null then 'N' ELSE PM.COPART END AS COPART
,FORMAT("%.2F", CAST(SUM(B.VAL_EMPR_PRE + B.VAL_EMPR_SEG + B.VAL_EMPR_ADM + B.VAL_FUNC_ADM) AS FLOAT64)) AS VAL_ITEM_PAGO 
FROM (SELECT A.DAT_PAGAMENTO, A.IDT_DOCUMENTO, A.IDT_COMPLEMENTO, A.COD_ORIGEM, A.IDT_SEQ_PAGTO, A.COD_BENEFICIARIO, A.COD_SITUACAO_DOC, A.COD_PLAN_ADM, A.COD_EMPRESA, A.COD_PREF_EMPRESA, A.COD_CAT_PLAN_ADM
		,DENSE_RANK() OVER (PARTITION BY A.IDT_DOCUMENTO,A.IDT_COMPLEMENTO,A.COD_ORIGEM,A.IDT_SEQ_PAGTO, A.DAT_PAGAMENTO,A.COD_BENEFICIARIO ORDER BY TMP_COMMIT_ORIGEM_CDC DESC) AS RANKING_A
	  FROM`OW_LAND_SAU_PRD.CONTA_PROCESSAMENT` AS A 
    WHERE A.COD_SITUACAO_DOC = 90
      ) AS A
INNER JOIN  (SELECT B.IDT_DOCUMENTO, B.IDT_COMPLEMENTO, B.COD_ORIGEM, B.IDT_SEQ_PAGTO, B.COD_BENEFICIARIO, B.COD_SITUACAO_ITEM, B.VAL_EMPR_PRE, B.VAL_EMPR_SEG, B.VAL_EMPR_ADM, B.VAL_FUNC_ADM
			,DENSE_RANK() OVER (PARTITION BY IDT_DOCUMENTO,IDT_COMPLEMENTO,COD_ORIGEM,IDT_SEQ_PAGTO,IDT_ANEXO,IDT_ITEM,COD_BENEFICIARIO ORDER BY TMP_COMMIT_ORIGEM_CDC DESC) AS RANKING_B
			FROM `OW_LAND_SAU_PRD.ITEM_PROCESSAMENTO` AS B
			WHERE B.COD_SITUACAO_ITEM = 90
      ) AS B
ON A.IDT_DOCUMENTO =  B.IDT_DOCUMENTO  
AND A.IDT_COMPLEMENTO = B.IDT_COMPLEMENTO 
AND A.COD_ORIGEM = B.COD_ORIGEM 
AND A.IDT_SEQ_PAGTO = B.IDT_SEQ_PAGTO
AND A.COD_BENEFICIARIO = B.COD_BENEFICIARIO
AND B.RANKING_B=1
INNER JOIN (SELECT
            D.COD_PREF_EMPRESA, D.COD_EMPRESA, D.COD_PROD, FLG_CONTR_ADESAO, FLG_COPART_REVERS
            ,DENSE_RANK() OVER (PARTITION BY D.COD_PREF_EMPRESA, D.COD_EMPRESA ORDER BY TMP_COMMIT_ORIGEM_CDC DESC) AS RANKING_D
            FROM `OW_LAND_SAU_PRD.EMPRESAS` AS D) AS D
ON A.COD_PREF_EMPRESA = D.COD_PREF_EMPRESA
AND A.COD_EMPRESA = D.COD_EMPRESA
AND D.RANKING_D=1
INNER JOIN (SELECT 
            C.COD_PROD, C.COD_TIPO_PRODUTO
            ,DENSE_RANK() OVER (PARTITION BY C.COD_PROD ORDER BY TMP_COMMIT_ORIGEM_CDC DESC) AS RANKING_C
            FROM `OW_LAND_SAU_PRD.PRODUTO_SAUDE` AS C) AS C
ON D.COD_PROD = C.COD_PROD
AND C.RANKING_C=1
LEFT JOIN 
   (SELECT PM.COD_ESPECIFICACAO,
        MAX(CASE WHEN PM.COD_ROT_PESQ_UNID IN (100,101,105,106) and VAL_PARTIC_FUNC > 0  THEN 'S' 
             WHEN PM.COD_ROT_PESQ_UNID = 0 AND AC.COD_ROT_CALC_ACUMU = '801' AND AC.COD_UNIDADE_LIMIT = '106' THEN 'S'
             ELSE 'N' END) AS COPART    
 FROM OW_LAND_SAU_PRD.PLANO_MEDICO PM
 LEFT JOIN OW_LAND_SAU_PRD.PLANO_ACUM_ESPEC AC
   ON cAST(AC.COD_PLANO AS STRING) = CAST(PM.COD_ESPECIFICACAO  AS STRING)
  AND CAST(AC.COD_GRP_ESTAT_INIC AS STRING) = CAST(PM.COD_GRP_ESTAT_INIC AS STRING)
  AND CAST(AC.COD_GRP_ESTAT_FIM  AS STRING) = CAST(PM.COD_GRP_ESTAT_FIM  AS STRING)
 WHERE PM.DAT_FIM_VIG_ESP >= current_DATE
   and PM.COD_GRP_ESTAT_INIC NOT IN (4164,4165) 
   and PM.COD_GRP_ESTAT_FIM NOT IN (4164,4165) 
 GROUP BY 1 ) PM
ON  PM.COD_ESPECIFICACAO = A.COD_PLAN_ADM

LEFT OUTER JOIN 
	(SELECT 
		   COD_PREF_EMPRESA
		 , COD_EMPRESA
	   , COD_CATEGORIA
	   , NME_CATEGORIA
	   , DENSE_RANK() OVER (PARTITION BY COD_PREF_EMPRESA, COD_EMPRESA, COD_CATEGORIA  ORDER BY TMP_COMMIT_ORIGEM_CDC DESC) RANK_CATEM
	FROM OW_LAND_SAU_PRD.CATEGORIA_EMPRESA)CE
	   ON A.COD_EMPRESA = CE.COD_EMPRESA
	  AND A.COD_PREF_EMPRESA = CE.COD_PREF_EMPRESA
	  AND A.COD_CAT_PLAN_ADM = CE.COD_CATEGORIA
	  and CE.RANK_CATEM = 1	
LEFT OUTER JOIN OW_LAND_SAU_PRD.CATEGORIA_ATU CA
  ON TRIM(CE.NME_CATEGORIA) = TRIM(CA.NME_CATEGORIA) 
WHERE CAST (FORMAT_DATE("%Y%m", A.DAT_PAGAMENTO) AS INT64) >= 201803
and CAST (FORMAT_DATE("%Y%m", A.DAT_PAGAMENTO) AS INT64) <= 201902
AND SUBSTR(B.IDT_DOCUMENTO,0,2) != '21' -- ODONTO
AND A.RANKING_A=1 
GROUP BY 1,2,3,4,5,6,7,8,9



